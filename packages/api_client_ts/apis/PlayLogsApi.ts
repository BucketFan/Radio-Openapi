/* tslint:disable */
/* eslint-disable */
/**
 * radio_openapi
 * radio_openapi
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@anycloud.co.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ChapterOfPlayLogEndChapterId200Response,
  ChapterOfPlayLogEndChapterIdRequest,
  GetPlayLogs200Response,
} from '../models';
import {
    ChapterOfPlayLogEndChapterId200ResponseFromJSON,
    ChapterOfPlayLogEndChapterId200ResponseToJSON,
    ChapterOfPlayLogEndChapterIdRequestFromJSON,
    ChapterOfPlayLogEndChapterIdRequestToJSON,
    GetPlayLogs200ResponseFromJSON,
    GetPlayLogs200ResponseToJSON,
} from '../models';

export interface ChapterOfPlayLogEndChapterIdOperationRequest {
    chapterOfPlayLogEndChapterIdRequest?: ChapterOfPlayLogEndChapterIdRequest;
}

export interface GetPlayLogsRequest {
    profileId?: string;
}

/**
 * PlayLogsApi - interface
 * 
 * @export
 * @interface PlayLogsApiInterface
 */
export interface PlayLogsApiInterface {
    /**
     * チャプター再生の終了時に叩くAPI。聴取開始時にレスポンスとして取得したSessionを Request Bodyに追加して送る必要がある。 
     * @summary End record chapter play log.
     * @param {ChapterOfPlayLogEndChapterIdRequest} [chapterOfPlayLogEndChapterIdRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlayLogsApiInterface
     */
    chapterOfPlayLogEndChapterIdRaw(requestParameters: ChapterOfPlayLogEndChapterIdOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChapterOfPlayLogEndChapterId200Response>>;

    /**
     * チャプター再生の終了時に叩くAPI。聴取開始時にレスポンスとして取得したSessionを Request Bodyに追加して送る必要がある。 
     * End record chapter play log.
     */
    chapterOfPlayLogEndChapterId(chapterOfPlayLogEndChapterIdRequest?: ChapterOfPlayLogEndChapterIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChapterOfPlayLogEndChapterId200Response>;

    /**
     * 特定のユーザーの再生履歴を返すAPI
     * @summary 
     * @param {string} [profileId] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlayLogsApiInterface
     */
    getPlayLogsRaw(requestParameters: GetPlayLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetPlayLogs200Response>>;

    /**
     * 特定のユーザーの再生履歴を返すAPI
     * 
     */
    getPlayLogs(profileId?: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetPlayLogs200Response>;

}

/**
 * 
 */
export class PlayLogsApi extends runtime.BaseAPI implements PlayLogsApiInterface {

    /**
     * チャプター再生の終了時に叩くAPI。聴取開始時にレスポンスとして取得したSessionを Request Bodyに追加して送る必要がある。 
     * End record chapter play log.
     */
    async chapterOfPlayLogEndChapterIdRaw(requestParameters: ChapterOfPlayLogEndChapterIdOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChapterOfPlayLogEndChapterId200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/play_logs`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ChapterOfPlayLogEndChapterIdRequestToJSON(requestParameters.chapterOfPlayLogEndChapterIdRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ChapterOfPlayLogEndChapterId200ResponseFromJSON(jsonValue));
    }

    /**
     * チャプター再生の終了時に叩くAPI。聴取開始時にレスポンスとして取得したSessionを Request Bodyに追加して送る必要がある。 
     * End record chapter play log.
     */
    async chapterOfPlayLogEndChapterId(chapterOfPlayLogEndChapterIdRequest?: ChapterOfPlayLogEndChapterIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChapterOfPlayLogEndChapterId200Response> {
        const response = await this.chapterOfPlayLogEndChapterIdRaw({ chapterOfPlayLogEndChapterIdRequest: chapterOfPlayLogEndChapterIdRequest }, initOverrides);
        return await response.value();
    }

    /**
     * 特定のユーザーの再生履歴を返すAPI
     * 
     */
    async getPlayLogsRaw(requestParameters: GetPlayLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetPlayLogs200Response>> {
        const queryParameters: any = {};

        if (requestParameters.profileId !== undefined) {
            queryParameters['profileId'] = requestParameters.profileId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/play_logs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetPlayLogs200ResponseFromJSON(jsonValue));
    }

    /**
     * 特定のユーザーの再生履歴を返すAPI
     * 
     */
    async getPlayLogs(profileId?: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetPlayLogs200Response> {
        const response = await this.getPlayLogsRaw({ profileId: profileId }, initOverrides);
        return await response.value();
    }

}
