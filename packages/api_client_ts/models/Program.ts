/* tslint:disable */
/* eslint-disable */
/**
 * radio_openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Chapter } from './Chapter';
import {
    ChapterFromJSON,
    ChapterFromJSONTyped,
    ChapterToJSON,
} from './Chapter';
import type { Club } from './Club';
import {
    ClubFromJSON,
    ClubFromJSONTyped,
    ClubToJSON,
} from './Club';
import type { Plan } from './Plan';
import {
    PlanFromJSON,
    PlanFromJSONTyped,
    PlanToJSON,
} from './Plan';

/**
 * Chapterの集合体
 * @export
 * @interface Program
 */
export interface Program {
    /**
     * 
     * @type {number}
     * @memberof Program
     */
    id?: number;
    /**
     * 
     * @type {Club}
     * @memberof Program
     */
    club?: Club;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof Program
     */
    broadcastStatus?: number;
    /**
     * 
     * @type {number}
     * @memberof Program
     */
    scope?: number;
    /**
     * 
     * @type {Array<Chapter>}
     * @memberof Program
     */
    chapters?: Array<Chapter>;
    /**
     * 
     * @type {Array<Plan>}
     * @memberof Program
     */
    attachedPlans?: Array<Plan>;
    /**
     * 
     * @type {boolean}
     * @memberof Program
     */
    isAttachedPin?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Program
     */
    reactionCommentsCount?: number;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    reservedAt?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Program
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the Program interface.
 */
export function instanceOfProgram(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProgramFromJSON(json: any): Program {
    return ProgramFromJSONTyped(json, false);
}

export function ProgramFromJSONTyped(json: any, ignoreDiscriminator: boolean): Program {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'club': !exists(json, 'club') ? undefined : ClubFromJSON(json['club']),
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'broadcastStatus': !exists(json, 'broadcastStatus') ? undefined : json['broadcastStatus'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'chapters': !exists(json, 'chapters') ? undefined : ((json['chapters'] as Array<any>).map(ChapterFromJSON)),
        'attachedPlans': !exists(json, 'attachedPlans') ? undefined : ((json['attachedPlans'] as Array<any>).map(PlanFromJSON)),
        'isAttachedPin': !exists(json, 'isAttachedPin') ? undefined : json['isAttachedPin'],
        'reactionCommentsCount': !exists(json, 'reactionCommentsCount') ? undefined : json['reactionCommentsCount'],
        'reservedAt': !exists(json, 'reservedAt') ? undefined : json['reservedAt'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
    };
}

export function ProgramToJSON(value?: Program | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'club': ClubToJSON(value.club),
        'title': value.title,
        'description': value.description,
        'broadcastStatus': value.broadcastStatus,
        'scope': value.scope,
        'chapters': value.chapters === undefined ? undefined : ((value.chapters as Array<any>).map(ChapterToJSON)),
        'attachedPlans': value.attachedPlans === undefined ? undefined : ((value.attachedPlans as Array<any>).map(PlanToJSON)),
        'isAttachedPin': value.isAttachedPin,
        'reactionCommentsCount': value.reactionCommentsCount,
        'reservedAt': value.reservedAt,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}

