/* tslint:disable */
/* eslint-disable */
/**
 * radio_openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Profile } from './Profile';
import {
    ProfileFromJSON,
    ProfileFromJSONTyped,
    ProfileToJSON,
} from './Profile';

/**
 * 
 * @export
 * @interface ReactionComment
 */
export interface ReactionComment {
    /**
     * 
     * @type {string}
     * @memberof ReactionComment
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ReactionComment
     */
    content?: string;
    /**
     * 
     * @type {Array<Profile>}
     * @memberof ReactionComment
     */
    likedProfiles?: Array<Profile>;
    /**
     * 
     * @type {boolean}
     * @memberof ReactionComment
     */
    isLiked?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReactionComment
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ReactionComment
     */
    updatedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ReactionComment
     */
    deletedAt?: string | null;
}

/**
 * Check if a given object implements the ReactionComment interface.
 */
export function instanceOfReactionComment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReactionCommentFromJSON(json: any): ReactionComment {
    return ReactionCommentFromJSONTyped(json, false);
}

export function ReactionCommentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReactionComment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'likedProfiles': !exists(json, 'LikedProfiles') ? undefined : ((json['LikedProfiles'] as Array<any>).map(ProfileFromJSON)),
        'isLiked': !exists(json, 'isLiked') ? undefined : json['isLiked'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'deletedAt': !exists(json, 'deletedAt') ? undefined : json['deletedAt'],
    };
}

export function ReactionCommentToJSON(value?: ReactionComment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'content': value.content,
        'LikedProfiles': value.likedProfiles === undefined ? undefined : ((value.likedProfiles as Array<any>).map(ProfileToJSON)),
        'isLiked': value.isLiked,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'deletedAt': value.deletedAt,
    };
}

